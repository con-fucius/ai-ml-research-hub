---
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  // With the YAML plugin, Astro can import the data directly.
  const ymlFiles = await import.meta.glob('../../../_data/frameworks/*.yml');

  const paths = await Promise.all(
    Object.entries(ymlFiles).map(async ([_path, resolver]) => {
      const { default: framework } = await resolver();
      return {
        params: { id: framework.id },
        props: { framework },
      };
    })
  );
  return paths;
}

const { framework } = Astro.props;
---
<Layout title={framework.name}>
  <nav class="breadcrumb">
    <a href="/">Home</a>
    <span class="breadcrumb-separator">›</span>
    <a href="/#frameworks">Frameworks</a>
    <span class="breadcrumb-separator">›</span>
    <span class="breadcrumb-current">{framework.name}</span>
  </nav>
  
  <div class="framework-header">
    <h1>{framework.name}</h1>
    <div class="links">
      <a href={framework.websiteUrl}>Documentation</a>
      {framework.githubUrl && <> | <a href={framework.githubUrl}>Main Repo</a></>}
      {framework.starterRepoUrl && <> | <a href={framework.starterRepoUrl}>Starter Kit</a></>}
    </div>
    <p class="summary">{framework.summary}</p>
  </div>

  <div class="framework-grid">
    <main class="main-content">
      {(framework.pythonDocsUrl || framework.apiReferenceUrl || framework.javascriptGithubUrl || framework.toolsExtensionUrl || framework.docsRepositoryUrl || framework.pythonSdkUrl || framework.microsoftResearchUrl || framework.pythonSourceUrl) && (
        <section>
          <h2>Official Resources</h2>
          <div class="resources-grid">
            {framework.pythonDocsUrl && <a href={framework.pythonDocsUrl} class="resource-link">Python Documentation</a>}
            {framework.apiReferenceUrl && <a href={framework.apiReferenceUrl} class="resource-link">API Reference</a>}
            {framework.javascriptGithubUrl && <a href={framework.javascriptGithubUrl} class="resource-link">JavaScript SDK</a>}
            {framework.awsExtensionsUrl && <a href={framework.awsExtensionsUrl} class="resource-link">AWS Extensions</a>}
            {framework.langgraphUrl && <a href={framework.langgraphUrl} class="resource-link">LangGraph</a>}
            {framework.langgraphJsUrl && <a href={framework.langgraphJsUrl} class="resource-link">LangGraph.js</a>}
            {framework.langsmithUrl && <a href={framework.langsmithUrl} class="resource-link">LangSmith</a>}
            {framework.langgraphPlatformUrl && <a href={framework.langgraphPlatformUrl} class="resource-link">LangGraph Platform</a>}
            {framework.postgresBackendUrl && <a href={framework.postgresBackendUrl} class="resource-link">Postgres Backend</a>}
            {framework.chainsConceptUrl && <a href={framework.chainsConceptUrl} class="resource-link">Chains Concept</a>}
            {framework.agentsConceptUrl && <a href={framework.agentsConceptUrl} class="resource-link">Agents Concept</a>}
            {framework.vectorStoresUrl && <a href={framework.vectorStoresUrl} class="resource-link">Vector Stores</a>}
            {framework.documentsApiUrl && <a href={framework.documentsApiUrl} class="resource-link">Documents API</a>}
            {framework.toolsIntegrationsUrl && <a href={framework.toolsIntegrationsUrl} class="resource-link">Tools Integrations</a>}
            {framework.langserveDocsUrl && <a href={framework.langserveDocsUrl} class="resource-link">LangServe Docs</a>}
            {framework.releasePolicyUrl && <a href={framework.releasePolicyUrl} class="resource-link">Release Policy</a>}
            {framework.quickStartTutorialUrl && <a href={framework.quickStartTutorialUrl} class="resource-link">Quick Start Tutorial</a>}
            {framework.toolsExtensionUrl && <a href={framework.toolsExtensionUrl} class="resource-link">Tools Extension</a>}
            {framework.exampleWorkflowsUrl && <a href={framework.exampleWorkflowsUrl} class="resource-link">Example Workflows</a>}
            {framework.communityGuiUrl && <a href={framework.communityGuiUrl} class="resource-link">Community GUI</a>}
            {framework.crewsConceptUrl && <a href={framework.crewsConceptUrl} class="resource-link">Crews Concept</a>}
            {framework.flowsConceptUrl && <a href={framework.flowsConceptUrl} class="resource-link">Flows Concept</a>}
            {framework.telemetryUrl && <a href={framework.telemetryUrl} class="resource-link">Telemetry</a>}
            {framework.installationGuideUrl && <a href={framework.installationGuideUrl} class="resource-link">Installation Guide</a>}
            {/* Google ADK Links */}
            {framework.docsRepositoryUrl && <a href={framework.docsRepositoryUrl} class="resource-link">Docs Repository</a>}
            {framework.pythonSdkUrl && <a href={framework.pythonSdkUrl} class="resource-link">Python SDK</a>}
            {framework.javaSdkUrl && <a href={framework.javaSdkUrl} class="resource-link">Java SDK</a>}
            {framework.sampleAgentsUrl && <a href={framework.sampleAgentsUrl} class="resource-link">Sample Agents</a>}
            {framework.developerUiUrl && <a href={framework.developerUiUrl} class="resource-link">Developer UI</a>}
            {framework.launchBlogUrl && <a href={framework.launchBlogUrl} class="resource-link">Launch Blog</a>}
            {framework.vertexIntegrationUrl && <a href={framework.vertexIntegrationUrl} class="resource-link">Vertex Integration</a>}
            {framework.githubTutorialUrl && <a href={framework.githubTutorialUrl} class="resource-link">GitHub Tutorial</a>}
            {/* Microsoft AutoGen Links */}
            {framework.microsoftResearchUrl && <a href={framework.microsoftResearchUrl} class="resource-link">Microsoft Research</a>}
            {framework.ag2ForkUrl && <a href={framework.ag2ForkUrl} class="resource-link">AG2 Fork</a>}
            {framework.studioPaperUrl && <a href={framework.studioPaperUrl} class="resource-link">Studio Paper</a>}
            {framework.researchPaperUrl && <a href={framework.researchPaperUrl} class="resource-link">Research Paper</a>}
            {framework.docsV02Url && <a href={framework.docsV02Url} class="resource-link">Docs v0.2</a>}
            {framework.semanticKernelBlogUrl && <a href={framework.semanticKernelBlogUrl} class="resource-link">Semantic Kernel Blog</a>}
            {framework.v04ReleaseBlogUrl && <a href={framework.v04ReleaseBlogUrl} class="resource-link">v0.4 Release Blog</a>}
            {framework.roadmapUrl && <a href={framework.roadmapUrl} class="resource-link">Roadmap</a>}
            {/* OpenAI Agents SDK Links */}
            {framework.pythonSourceUrl && <a href={framework.pythonSourceUrl} class="resource-link">Python Source</a>}
            {framework.jsSourceUrl && <a href={framework.jsSourceUrl} class="resource-link">JavaScript Source</a>}
            {framework.customerServiceDemoUrl && <a href={framework.customerServiceDemoUrl} class="resource-link">Customer Service Demo</a>}
            {framework.voiceSampleUrl && <a href={framework.voiceSampleUrl} class="resource-link">Voice Sample</a>}
            {framework.swarmDeprecationUrl && <a href={framework.swarmDeprecationUrl} class="resource-link">Swarm Deprecation</a>}
            {framework.pypiHistoryUrl && <a href={framework.pypiHistoryUrl} class="resource-link">PyPI History</a>}
            {framework.npmUrl && <a href={framework.npmUrl} class="resource-link">NPM Package</a>}
            {framework.datacampCourseUrl && <a href={framework.datacampCourseUrl} class="resource-link">DataCamp Course</a>}
          </div>
        </section>
      )}

      <section>
        <h2>Key Features</h2>
        <ul class="features-list">
          {framework.features && framework.features.map(feature => (
            <li><strong>{feature.title}:</strong> {feature.description}</li>
          ))}
        </ul>
      </section>

      <section>
        <h2>Code Examples</h2>
        {framework.codeSnippets && framework.codeSnippets.map(snippet => (
          <div class="code-example">
            <h3>{snippet.title}</h3>
            <div class="code-container">
              <div class="code-header">
                <span class="language-label">{snippet.language}</span>
                <button class="copy-btn" onclick={`copyCode(this)`}>Copy</button>
              </div>
              <pre class="code-block"><code class={`language-${snippet.language}`}>{snippet.code}</code></pre>
            </div>
          </div>
        ))}
      </section>

      {framework.useCases && (
        <section>
          <h2>Use Cases</h2>
          <ul class="use-cases-list">
            {framework.useCases.map(useCase => <li>{useCase}</li>)}
          </ul>
        </section>
      )}

      {(framework.advantages || framework.disadvantages) && (
        <section>
          <h2>Pros & Cons</h2>
          <div class="pros-cons-grid">
            {framework.advantages && (
              <div class="pros">
                <h3>Advantages</h3>
                <ul>
                  {framework.advantages.map(advantage => <li>{advantage}</li>)}
                </ul>
              </div>
            )}
            {framework.disadvantages && (
              <div class="cons">
                <h3>Disadvantages</h3>
                <ul>
                  {framework.disadvantages.map(disadvantage => <li>{disadvantage}</li>)}
                </ul>
              </div>
            )}
          </div>
        </section>
      )}

      {framework.roadmap && (
        <section>
          <h2>Future Outlook & Integrations</h2>
          <ul class="roadmap-list">
            {framework.roadmap.map(item => (
              <li><strong>{item.title}</strong> [{item.status}]: {item.description}</li>
            ))}
          </ul>
        </section>
      )}
    </main>

    <aside class="sidebar">
      <h2>Timeline</h2>
      <div class="timeline">
        {framework.timeline && framework.timeline.map(event => (
          <div class="timeline-item" data-type={event.type}>
            <div class="timeline-date">{event.date}</div>
            <div class="timeline-content">
              <div class="timeline-title">{event.description}</div>
              <a href={event.url} class="timeline-link">Source</a>
            </div>
          </div>
        ))}
      </div>
    </aside>
  </div>
</Layout>

<style>
  .breadcrumb {
    margin-bottom: 1.5rem;
    padding: 0.75rem 0;
    font-size: 0.9rem;
    color: var(--muted-color);
  }
  
  .breadcrumb a {
    color: var(--accent-color);
    text-decoration: none;
  }
  
  .breadcrumb a:hover {
    color: var(--heading-color);
    text-decoration: underline;
  }
  
  .breadcrumb-separator {
    margin: 0 0.5rem;
    color: var(--muted-color);
  }
  
  .breadcrumb-current {
    color: var(--heading-color);
    font-weight: 500;
  }

  .framework-header {
    text-align: center;
    margin-bottom: 2rem;
  }
  .framework-header h1 {
    margin-bottom: 0.5rem;
    font-size: 2rem;
  }
  .links {
    margin-bottom: 1rem;
  }
  .summary {
    max-width: 70ch;
    margin: 0 auto;
    font-style: italic;
  }
  
  .framework-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  @media (min-width: 768px) {
    .framework-grid {
      grid-template-columns: 2fr 1fr;
    }
  }
  
  .main-content section {
    margin-bottom: 1.5rem;
  }
  .main-content h2 {
    margin-bottom: 0.75rem;
  }
  .main-content h3 {
    margin-bottom: 0.4rem;
  }
  
  .resources-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 0.75rem;
    margin-bottom: 1rem;
  }
  
  .resource-link {
    display: block;
    padding: 0.5rem 0.75rem;
    background-color: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    text-decoration: none;
    color: var(--text-color);
    font-size: 0.9rem;
    transition: all 0.2s ease;
    text-align: center;
  }
  
  .resource-link:hover {
    background-color: var(--border-color);
    transform: translateY(-1px);
    text-decoration: none;
  }
  
  .features-list, .use-cases-list {
    padding-left: 1.5rem;
  }
  .features-list li, .use-cases-list li {
    margin-bottom: 0.2rem;
    line-height: 1.2;
  }
  
  .pros-cons-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  @media (min-width: 600px) {
    .pros-cons-grid {
      grid-template-columns: 1fr 1fr;
    }
  }
  .pros ul, .cons ul {
    padding-left: 1.5rem;
  }
  .pros li, .cons li {
    margin-bottom: 0.4rem;
  }
  
  .roadmap-list {
    padding-left: 1.5rem;
  }
  .roadmap-list li {
    margin-bottom: 0.5rem;
  }
  
  .code-example {
    margin-bottom: 1.5rem;
  }
  .code-example h3 {
    margin-bottom: 0.5rem;
    font-weight: normal;
    font-size: 1.1rem;
  }
  
  .code-container {
    position: relative;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .code-header {
    background-color: #2d2d2d;
    padding: 0.5rem 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #333;
  }
  
  .language-label {
    font-size: 0.75rem;
    color: #888;
    text-transform: capitalize;
    font-weight: 500;
  }
  
  .copy-btn {
    background: none;
    border: 1px solid #555;
    color: #ccc;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .copy-btn:hover {
    background-color: #444;
    border-color: #777;
  }
  
  .code-block {
    background-color: #1e1e1e;
    border: none;
    border-radius: 0;
    padding: 1rem;
    margin: 0;
    font-size: 0.8rem;
    overflow-x: auto;
    font-family: 'Ubuntu Mono', 'Consolas', 'Monaco', monospace;
    line-height: 1.4;
  }
  .code-block code {
    background: none;
    border: none;
    padding: 0;
    color: #d4d4d4;
    font-size: inherit;
  }
  
  .sidebar h2 {
    margin-bottom: 1rem;
  }
  
  .timeline {
    position: relative;
    padding-left: 2rem;
  }
  
  .timeline::before {
    content: '';
    position: absolute;
    left: 0.75rem;
    top: 0;
    bottom: 0;
    width: 2px;
    background: var(--border-color);
  }
  
  .timeline-item {
    position: relative;
    display: flex;
    gap: 1rem;
    padding-bottom: 1.5rem;
    margin-left: 1rem;
  }
  
  .timeline-item::before {
    content: '';
    position: absolute;
    left: -1.75rem;
    top: 0.25rem;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--primary-color);
    border: 2px solid var(--bg-color);
    z-index: 1;
  }
  
  /* Different colors for different event types */
  .timeline-item[data-type="Release"]::before {
    background: #4CAF50;
  }
  
  .timeline-item[data-type="Update"]::before {
    background: #2196F3;
  }
  
  .timeline-item[data-type="Tool"]::before {
    background: #FF9800;
  }
  
  .timeline-date {
    font-weight: bold;
    font-size: 0.9rem;
    min-width: 80px;
    flex-shrink: 0;
  }
  .timeline-content {
    flex: 1;
  }
  .timeline-title {
    margin-bottom: 0.25rem;
    font-size: 0.95rem;
  }
  .timeline-link {
    font-size: 0.85rem;
    opacity: 0.8;
  }
</style>

<script>
  function copyCode(button) {
    const codeBlock = button.closest('.code-container').querySelector('code');
    const text = codeBlock.textContent;
    
    navigator.clipboard.writeText(text).then(() => {
      const originalText = button.textContent;
      button.textContent = 'Copied!';
      button.style.background = '#4CAF50';
      button.style.borderColor = '#4CAF50';
      
      setTimeout(() => {
        button.textContent = originalText;
        button.style.background = 'none';
        button.style.borderColor = '#555';
      }, 2000);
    });
  }
</script>