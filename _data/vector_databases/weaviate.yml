# The unique identifier for the vector database
id: weaviate

# --- Basic Information ---
name: "Weaviate"
githubUrl: "https://github.com/weaviate/weaviate"
websiteUrl: "https://weaviate.io"
docsUrl: "https://docs.weaviate.io/weaviate"
pythonClientUrl: "https://github.com/weaviate/weaviate-python-client"
typescriptClientUrl: "https://github.com/weaviate/typescript-client"
javaClientUrl: "https://github.com/weaviate/java-client"
recipesUrl: "https://github.com/weaviate/recipes"
blogUrl: "https://weaviate.io/blog"
v129ReleaseUrl: "https://weaviate.io/blog/weaviate-1-29-release"
v130ReleaseUrl: "https://weaviate.io/blog/weaviate-1-30-release"
v131ReleaseUrl: "https://weaviate.io/blog/weaviate-1-31-release"
nvidiaPartnershipUrl: "https://weaviate.io/blog/nvidia-and-weaviate"
roadmapUrl: "https://github.com/weaviate/weaviate/discussions/4729"
summary: "A cloud-native, scalable vector database with hybrid search, multi-vector support, GPU acceleration, and 25+ model integrations. Features MUVERA compression, BlockMax WAND BM25, RBAC, and enterprise-grade security with SOC 2 Type II compliance."

# --- Categorization & Tags ---
# Tags removed as per design requirements

# --- Key Features ---
features:
  - title: "Hybrid Search Architecture"
    description: "Single API call with alpha blend of BM25 (BlockMax WAND) + vector similarity for comprehensive search capabilities."
  - title: "Multi-vector & MUVERA"
    description: "Late-interaction ColBERT/ColPali support with MUVERA compression flattening to fixed 768-dim vectors (configurable)."
  - title: "GPU Acceleration"
    description: "NVIDIA cuVS HNSW build 4-5× faster with auto-conversion to CPU-serve format for cost optimization."
  - title: "Modular Ecosystem"
    description: "25+ runtime modules including text2vec-openai, multi2vec-google, reranker-cohere, generative-openai integrations."
  - title: "Enterprise Security"
    description: "TLS 1.3, RBAC, SSO (OIDC/SAML), SOC 2 Type II, HIPAA-ready with regional isolation capabilities."
  - title: "Flexible Deployment"
    description: "Self-hosted Docker/K8s Helm, embedded (Go/Java), Weaviate Cloud (serverless & dedicated) options."
  - title: "Advanced Core"
    description: "Rust + Go micro-services, HNSW ANN, async WAL, pluggable storage (RocksDB, in-memory) architecture."

# --- Use Cases ---
useCases:
  - "RAG systems - LangChain, LlamaIndex, CrewAI using hybrid retrieval + reranker"
  - "Agentic workflows - Query Agent, Transformation Agent, Personalization Agent (GA)"
  - "Multimodal applications - Text + image + video in one collection via multi2vec-google"
  - "Enterprise search - HIPAA, SOC 2, regional latency <50ms with Edge & dedicated clusters"
  - "Hybrid search applications - Single API combining semantic and keyword search"

# --- Pros & Cons ---
advantages:
  - "Open-source with hybrid search out-of-the-box capabilities"
  - "MUVERA compression significantly reduces multi-vector storage requirements"
  - "25+ model integrations at ingest and query time"
  - "Enterprise-grade security & compliance (SOC 2, HIPAA-ready)"
  - "GPU acceleration with automatic CPU fallback for cost optimization"

disadvantages:
  - "GPU build requires CUDA 12+ drivers and setup complexity"
  - "Multi-vector tuning complexity for optimal performance"
  - "Multi-node clustering still requires DIY implementation"
  - "Free Cloud tier limited to 1M objects / 1GB RAM"

# --- Future Outlook & Integrations ---
roadmap:
  - title: "Multi-node Clustering"
    description: "Raft consensus + shard replication targeting v1.32"
    status: "Target v1.32"
  - title: "Hybrid GPU→CPU Tiering"
    description: "Auto-fallback to cut infrastructure costs by 40%"
    status: "In Development"
  - title: "Domain-specific Agents"
    description: "Finance, healthcare, e-commerce agent blueprints"
    status: "Roadmap"
  - title: "4-bit Quantization"
    description: "int4 PQ for 2× memory reduction optimization"
    status: "Future"

# --- Timeline Events ---
timeline:
  - date: "2025-02-25"
    type: "Release"
    title: "v1.29 GA"
    description: "94% faster keyword search, Azure dedicated clusters, RBAC & async replication stable"
    url: "https://weaviate.io/blog/weaviate-1-29-release"
  - date: "2025-04-08"
    type: "Release"
    title: "v1.30 GA"
    description: "Query Agent & Transformation Agent GA; BlockMax WAND 10× faster BM25"
    url: "https://weaviate.io/blog/weaviate-1-30-release"
  - date: "2025-06-03"
    type: "Release"
    title: "v1.31 GA"
    description: "MUVERA multi-vector compression, BM25 AND/OR operators, GPU cuVS build, incremental vector addition"
    url: "https://weaviate.io/blog/weaviate-1-31-release"
  - date: "2025-06-09"
    type: "Update"
    title: "NVIDIA Partnership"
    description: "cuVS GPU-accelerated index build (4-5× faster) with CPU-serve fallback"
    url: "https://weaviate.io/blog/nvidia-and-weaviate"
  - date: "2025-07-01"
    type: "Update"
    title: "Roadmap Preview"
    description: "Multi-node clustering, hybrid GPU→CPU tiers, domain-specific agents"
    url: "https://github.com/weaviate/weaviate/discussions/4729"

# --- Code Examples ---
codeSnippets:
  - title: "Local Docker Setup"
    language: "bash"
    code: |
      docker run -p 8080:8080 -v $(pwd)/weaviate_data:/var/lib/weaviate \
        semitechnologies/weaviate:1.31
  - title: "Python Hybrid Search"
    language: "python"
    code: |
      import weaviate
      client = weaviate.connect_to_local()

      collection = client.collections.get("SupportTickets")
      response = collection.query.hybrid(
          query="login issues after OS upgrade",
          alpha=0.75,
          limit=5
      )
  - title: "GPU Index Build (cuVS)"
    language: "yaml"
    code: |
      # docker-compose.yml
      services:
        weaviate:
          image: semitechnologies/weaviate:1.31
          environment:
            ENABLE_GPU: "true"
            GPU_DEVICE: "0"
  - title: "SDK Matrix Overview"
    language: "text"
    code: |
      # Multi-language SDK support:
      # Python: weaviate-client v3.26.2
      # TypeScript: weaviate-ts-client v2.7.0
      # Java: io.weaviate:client v5.3.0
      # Go: github.com/weaviate/weaviate-go-client v4.11.0
      
      # Architecture highlights:
      # - Rust + Go micro-services
      # - HNSW ANN with async WAL
      # - Pluggable storage (RocksDB, in-memory)
      # - 25+ runtime modules for model integrations